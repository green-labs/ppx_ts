// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Spice = require("@greenlabs/ppx-spice/src/rescript/Spice.js");
var Js_dict = require("rescript/lib/js/js_dict.js");
var Js_json = require("rescript/lib/js/js_json.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

function err_encode(v) {
  return Js_dict.fromArray([
              [
                "firstName",
                Spice.stringToJson(v.firstName)
              ],
              [
                "lastName",
                Spice.stringToJson(v.lastName)
              ]
            ]);
}

function err_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Spice.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Spice.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var firstName = Spice.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "firstName"), null));
  if (firstName.TAG === /* Ok */0) {
    var lastName = Spice.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "lastName"), null));
    if (lastName.TAG === /* Ok */0) {
      return {
              TAG: /* Ok */0,
              _0: {
                firstName: firstName._0,
                lastName: lastName._0
              }
            };
    }
    var e = lastName._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".lastName" + e.path,
              message: e.message,
              value: e.value
            }
          };
  }
  var e$1 = firstName._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".firstName" + e$1.path,
            message: e$1.message,
            value: e$1.value
          }
        };
}

var Err = {
  err_encode: err_encode,
  err_decode: err_decode
};

function t_keyToString(key) {
  switch (key) {
    case /* Name */0 :
        return "name";
    case /* Age */1 :
        return "age";
    case /* IsKorean */2 :
        return "isKorean";
    
  }
}

function t1_keyToString(key) {
  if (key) {
    return "lastName";
  } else {
    return "firstName";
  }
}

function t2_keyToString(key) {
  switch (key) {
    case /* Name */0 :
        return "name";
    case /* Age */1 :
        return "age";
    case /* IsKorean */2 :
        return "isKorean";
    
  }
}

function t5_encode(v) {
  return Js_dict.fromArray([
              [
                "name",
                err_encode(v.name)
              ],
              [
                "age",
                err_encode(v.age)
              ],
              [
                "isKorean",
                err_encode(v.isKorean)
              ]
            ]);
}

function t5_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Spice.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Spice.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var name = err_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "name"), null));
  if (name.TAG === /* Ok */0) {
    var age = err_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "age"), null));
    if (age.TAG === /* Ok */0) {
      var isKorean = err_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "isKorean"), null));
      if (isKorean.TAG === /* Ok */0) {
        return {
                TAG: /* Ok */0,
                _0: {
                  name: name._0,
                  age: age._0,
                  isKorean: isKorean._0
                }
              };
      }
      var e = isKorean._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".isKorean" + e.path,
                message: e.message,
                value: e.value
              }
            };
    }
    var e$1 = age._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".age" + e$1.path,
              message: e$1.message,
              value: e$1.value
            }
          };
  }
  var e$2 = name._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".name" + e$2.path,
            message: e$2.message,
            value: e$2.value
          }
        };
}

function t6_encode(v) {
  return Js_dict.fromArray([
              [
                "name",
                Spice.stringToJson(v.name)
              ],
              [
                "age",
                Spice.stringToJson(v.age)
              ],
              [
                "isKorean",
                Spice.boolToJson(v.isKorean)
              ]
            ]);
}

function t6_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Spice.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Spice.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var name = Spice.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "name"), null));
  if (name.TAG === /* Ok */0) {
    var age = Spice.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "age"), null));
    if (age.TAG === /* Ok */0) {
      var isKorean = Spice.boolFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "isKorean"), null));
      if (isKorean.TAG === /* Ok */0) {
        return {
                TAG: /* Ok */0,
                _0: {
                  name: name._0,
                  age: age._0,
                  isKorean: isKorean._0
                }
              };
      }
      var e = isKorean._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".isKorean" + e.path,
                message: e.message,
                value: e.value
              }
            };
    }
    var e$1 = age._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".age" + e$1.path,
              message: e$1.message,
              value: e$1.value
            }
          };
  }
  var e$2 = name._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".name" + e$2.path,
            message: e$2.message,
            value: e$2.value
          }
        };
}

function t7_encode(v) {
  return Js_dict.fromArray([
              [
                "name",
                Spice.optionToJson(Spice.stringToJson, v.name)
              ],
              [
                "age",
                Spice.optionToJson(Spice.intToJson, v.age)
              ],
              [
                "isKorean",
                Spice.optionToJson(Spice.boolToJson, v.isKorean)
              ]
            ]);
}

function t7_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Spice.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Spice.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var name = Spice.optionFromJson(Spice.stringFromJson, Belt_Option.getWithDefault(Js_dict.get(dict$1, "name"), null));
  if (name.TAG === /* Ok */0) {
    var age = Spice.optionFromJson(Spice.intFromJson, Belt_Option.getWithDefault(Js_dict.get(dict$1, "age"), null));
    if (age.TAG === /* Ok */0) {
      var isKorean = Spice.optionFromJson(Spice.boolFromJson, Belt_Option.getWithDefault(Js_dict.get(dict$1, "isKorean"), null));
      if (isKorean.TAG === /* Ok */0) {
        return {
                TAG: /* Ok */0,
                _0: {
                  name: name._0,
                  age: age._0,
                  isKorean: isKorean._0
                }
              };
      }
      var e = isKorean._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".isKorean" + e.path,
                message: e.message,
                value: e.value
              }
            };
    }
    var e$1 = age._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".age" + e$1.path,
              message: e$1.message,
              value: e$1.value
            }
          };
  }
  var e$2 = name._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".name" + e$2.path,
            message: e$2.message,
            value: e$2.value
          }
        };
}

exports.Err = Err;
exports.t_keyToString = t_keyToString;
exports.t1_keyToString = t1_keyToString;
exports.t2_keyToString = t2_keyToString;
exports.t5_encode = t5_encode;
exports.t5_decode = t5_decode;
exports.t6_encode = t6_encode;
exports.t6_decode = t6_decode;
exports.t7_encode = t7_encode;
exports.t7_decode = t7_decode;
/* No side effect */
